[package]
name = "salvo-csrf"
version.workspace = true
edition.workspace = true
license = "MIT"

[package.metadata.release]
release = false

# https://github.com/rustwasm/wasm-pack/issues/1247
# [package.metadata.wasm-pack.profile.release]
# wasm-opt = false

# [lib]
# crate-type = ["cdylib"]

[lints]
workspace = true

[features]
default = [
    "cookie-store",
    # "bcrypt-cipher"
]
full = [
    "cookie-store",
    "session-store",
    # "bcrypt-cipher",
    "hmac-cipher",
    "aes-gcm-cipher",
    "ccp-cipher",
]
cookie-store = ["salvo-core/cookie", "dep:cookie"]
session-store = ["dep:salvo-session"]
bcrypt-cipher = ["dep:bcrypt"]
hmac-cipher = ["dep:hmac", "dep:sha2"]
aes-gcm-cipher = ["dep:aead", "dep:aes-gcm"]
ccp-cipher = ["dep:aead", "dep:chacha20poly1305"]

[dependencies]
aead = { workspace = true, optional = true }
aes-gcm = { workspace = true, optional = true }
base64 = { workspace = true }
bcrypt = { workspace = true, optional = true }
chacha20poly1305 = { workspace = true, optional = true }
cookie = { workspace = true, features = [
    "percent-encode",
    # "signed",
], optional = true }
hmac = { workspace = true, optional = true }
tracing = { workspace = true }
salvo-core = { workspace = true, default-features = false }
salvo-session = { workspace = true, optional = true } # 也使用了 getrandom
serde_json = { workspace = true }
sha2 = { workspace = true, optional = true }
getrandom = { workspace = true, features = [
    "wasm_js",
] } # ! build with -> RUSTFLAGS='--cfg getrandom_backend="wasm_js"'

worker = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }

[dev-dependencies]
